name: Deploy Nutrifit (Self-Hosted)

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copiar para $APP_DIR
        run: |
          mkdir -p "$APP_DIR"
          shopt -s dotglob
          rm -rf "$APP_DIR"/*
          cp -r ./* "$APP_DIR"/
          shopt -u dotglob

      - name: Escrever .env
        working-directory: ${{ env.APP_DIR }}
        run: |
          cat > "${ENV_FILE}" <<EOF
          POSTGRES_USER=${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.NUTRIFIT_POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ env.POSTGRES_DB }}
          POSTGRES_HOST=${{ env.POSTGRES_HOST }}
          POSTGRES_PORT=${{ env.POSTGRES_PORT }}
          
          # .NET / Redis
          ConnectionStrings__Default=Host=${{ env.POSTGRES_HOST }};Port=${{ env.POSTGRES_PORT }};Database=${{ env.POSTGRES_DB }};Username=${{ env.POSTGRES_USER }};Password=${{ secrets.NUTRIFIT_POSTGRES_PASSWORD }}
          Redis=redis:6379,ssl=false,abortConnect=false
          ASPNETCORE_ENVIRONMENT=Docker
          
          # portas expostas no host
          API_PORT=${{ env.API_PORT }}
          FRONT_PORT=${{ env.FRONT_PORT }}
          EOF

      - name: Validar compose
        working-directory: ${{ env.APP_DIR }}
        run: docker compose --env-file "${ENV_FILE}" config

      - name: Subir stack
        working-directory: ${{ env.APP_DIR }}
        run: |
          docker compose --env-file "${ENV_FILE}" up -d --build
          docker compose ps
